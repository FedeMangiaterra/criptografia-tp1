from finite_field_element import FiniteFieldElement
from elliptic_curve_point import EllipticCurvePoint
from timeit import default_timer as timer

def brute_force(generator, order, result):
    start = timer()
    for i in range(1, order):
        if i * generator == result:
            end = timer()
            print(f"Time elapsed: {end - start}")
            return i
    

def main():
    p = 1021
    a = FiniteFieldElement(905, p)
    b = FiniteFieldElement(100, p)
    x = FiniteFieldElement(1006, p)
    y = FiniteFieldElement(416, p)
    generator = EllipticCurvePoint(x, y, a, b)

    curve_size = generator.get_curve_size(p)
    print(f"The curve has {curve_size} points")
    subgroup, order = generator.get_subgroup()
    print(f"The subgroup generated by the point {generator.print_info()} has order {order}")
    print(f"Cofactor: {curve_size}/{order} = {curve_size / order}")

    x_result = FiniteFieldElement(612, p)
    y_result = FiniteFieldElement(827, p)
    result = EllipticCurvePoint(x_result, y_result, a, b)

    print("Solving with brute force")
    private_key = brute_force(generator, order, result)
    print(private_key)
    
    return

if __name__ == "__main__":
    main()